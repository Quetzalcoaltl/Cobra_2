import DAdosMotor
import flask
import turtle
import csv


vetor=(
    [40.00	,
    18.30	,
    18.34	,
    18.44	,
    18.54	,
    18.58	,
    18.59	,
    18.65	,
    18.76	,
    18.81	,
    18.83	,
    18.92	,
    18.96	,
    19.01	,
    19.06	,
    19.12	,
    19.18	,
    19.24	,
    19.23	,
    19.32	,
    19.43	,
    19.46	,
    19.52	,
    19.55	,
    19.65	,
    19.68	,
    19.71	,
    19.70	,
    19.83	,
    19.91	,
    19.97	,
    19.98	,
    20.09	,
    20.14	,
    20.16	,
    20.19	,
    20.21	,
    20.26	,
    20.33	,
    20.39	,
    20.51	,
    20.56	,
    20.59	,
    20.60	,
    20.63	,
    20.69	,
    20.74	,
    20.85	,
    20.86	,
    20.87	,
    21.03	,
    21.16	,
    21.06	,
    21.07	,
    21.16	,
    21.24	,
    21.30	,
    21.35	,
    60.00	,
    21.55	,
    21.64	,
    22.29	,
    23.03	,
    23.63	,
    24.20	,
    24.75	,
    25.12	,
    25.76	,
    26.49	,
    27.43	,
    28.12	,
    28.64	,
    29.15	,
    30.09	,
    30.33	,
    30.94	,
    31.48	,
    31.92	,
    32.34	,
    33.04	,
    33.98	,
    34.27	,
    35.12	,
    35.60	,
    36.09	,
    36.26	,
    36.92	,
    37.52	,
    37.88	,
    38.28	,
    38.67	,
    39.55	,
    40.15	,
    40.98	,
    41.20	,
    41.67	,
    41.96	,
    42.71	,
    42.91	,
    44.12	,
    44.84	,
    45.47	,
    45.79	,
    46.52	,
    46.75	,
    46.59	,
    47.45	,
    48.42	,
    48.60	,
    48.91	,
    49.14	,
    49.83	,
    50.23	,
    50.95	,
    51.44	,
    51.77	,
    52.17	,
    52.35	,
    53.12	,
    53.48	,
    54.00	,
    54.39	,
    54.71	,
    55.72	,
    55.95	,
    56.40	,
    56.91	,
    57.06	,
    57.55	,
    58.15	,
    58.51	,
    58.73	,
    59.61	,
    60.22	,
    60.44	,
    60.82	,
    61.27	,
    61.84	,
    61.99	,
    62.50	,
    63.07	,
    63.64	,
    63.83	,
    64.44	,
    64.82	,
    65.30	,
    65.72	,
    66.08	,
    66.25	,
    66.70	,
    67.02	,
    67.77	,
    67.97	,
    68.14	,
    68.84	,
    69.80	,
    69.77	,
    70.03	,
    70.37	,
    70.67	,
    71.20	,
    71.77	,
    71.90	,
    72.08	,
    72.63	,
    73.41	,
    73.76	,
    74.07	,
    74.28	,
    74.72	,
    75.14	,
    75.47	,
    75.77	,
    76.41	,
    76.55	,
    77.25	,
    77.61	,
    78.02	,
    78.28	,
    78.67	,
    79.03	,
    79.39	,
    79.85	,
    80.09	,
    80.35	,
    80.76	,
    81.11	,
    82.05	,
    82.25	,
    82.44	,
    82.73	,
    83.14	,
    83.50	,
    83.86	,
    84.27	,
    84.51	,
    85.23	,
    85.72	,
    86.20	,
    86.52	,
    86.75	,
    86.90	,
    87.43	,
    87.83	,
    87.95	,
    88.47	,
    89.17	,
    89.43	,
    89.81	,
    90.11	,
    90.44	,
    90.68	,
    91.13	,
    91.36	,
    91.75	,
    92.08	,
    92.64	,
    93.26	,
    93.59	,
    93.80	,
    94.18	,
    94.47	,
    94.78	,
    95.13	,
    95.39	,
    95.70	,
    96.07	,
    96.70	,
    96.94	,
    97.28	,
    97.63	,
    97.86	,
    98.22	,
    98.51	,
    98.75	,
    99.19	,
    99.54	,
    100.08	,
    100.42	,
    100.65	,
    100.85	,
    101.20	,
    101.35	,
    101.74	,
    102.12	,
    102.48	,
    102.75	,
    103.08	,
    103.69	,
    103.81	,
    104.26	,
    104.37	,
    104.73	,
    104.98	,
    105.46	,
    105.67	,
    105.82	,
    106.09	,
    106.74	,
    106.97	,
    107.23	,
    107.39	,
    107.50	,
    107.61	,
    107.72	,
    107.85	,
    108.05	,
    108.13	,
    108.11	,
    108.21	,
    108.28	,
    108.31	,
    108.34	,
    108.46	,
    108.48	,
    108.51	,
    108.64	,
    108.79	,
    108.78	,
    108.86	,
    108.91	,
    108.92	,
    108.98	,
    108.96	,
    109.03	,
    109.05	,
    109.09	,
    109.08	,
    109.19	,
    109.11	,
    109.23	,
    109.18	,
    109.20	,
    109.21	,
    109.23	,
    109.34	,
    109.38	,
    109.40	,
    109.43	,
    109.36	,
    109.27	,
    109.52	,
    109.36	,
    109.42	,
    109.39	,
    109.34	,
    109.43	,
    109.58	,
    109.26	,
    109.43	,
    109.41	,
    109.40	,
    109.36	,
    109.42	,
    109.23	,
    109.28	,
    109.40	,
    109.31	,
    109.55	,
    109.71	,
    109.47	,
    109.45	,
    109.24	,
    109.61	,
    109.58	,
    109.48	,
    109.39	,
    109.72	,
    109.44	,
    109.49	,
    109.52	,
    109.50	,
    109.53	,
    109.52	,
    109.38	,
    109.62	,
    109.50	,
    109.46	,
    109.50	,
    109.31	,
    109.42	,
    109.45	,
    109.33	,
    109.68	,
    109.46	,
    109.54	,
    109.95	,
    109.61	,
    109.52	,
    109.32	,
    109.84	,
    109.51	,
    109.51	,
    109.50	,
    109.47	,
    109.61	,
    109.56	,
    109.52	,
    109.66	,
    109.62	,
    109.60	,
    109.53	,
    109.60	,
    109.62	,
    109.56	,
    109.66	,
    109.34	,
    109.32	,
    109.71	,
    109.42	,
    108.90	,
    109.56	,
    109.46	,
    109.19	,
    109.70	,
    109.85	,
    109.61	,
    109.60	,
    109.88	,
    109.77	,
    109.71	,
    109.55	,
    109.79	,
    109.54	,
    109.67	,
    109.71	,
    109.62	,
    109.49	,
    109.48	,
    109.50	,
    109.53	,
    109.57	,
    109.77	,
    109.45	,
    109.66	,
    109.58	,
    109.40	,
    109.60	,
    109.71	,
    109.67	,
    109.74	,
    109.57	,
    109.49	,
    109.48	,
    109.66	,
    109.20	,
    109.46	,
    109.23	,
    109.61	,
    109.89	,
    109.37	,
    109.74	,
    109.68	,
    109.69	,
    109.91	,
    109.83	,
    110.03	,
    109.80	,
    109.70	,
    109.76	,
    109.54	,
    109.50	,
    109.67	,
    109.11	,
    109.50	,
    109.86	,
    109.95	,
    109.54	,
    109.49	,
    109.64	,
    109.71	,
    109.41	,
    109.47	,
    109.95	,
    109.55	,
    109.74	,
    109.54	,
    110.01	,
    109.86	,
    109.73	,
    109.44	,
    109.52	,
    110.10	,
    109.56	,
    109.25	,
    109.90	,
    109.79	,
    109.30	,
    109.80	,
    109.66	,
    109.46	,
    109.80	,
    109.55	,
    109.65	,
    109.46	,
    109.35	,
    109.72	,
    109.58	,
    109.19	,
    109.50	,
    109.62	,
    109.84	,
    109.44	,
    109.52	,
    109.44	,
    109.67	,
    109.90	,
    109.73	,
    109.44	,
    109.85	,
    109.49	,
    109.92	,
    110.15	,
    109.28	,
    109.91	,
    109.69	,
    110.03	,
    110.03	,
    110.20	,
    109.49	,
    109.78	,
    109.74	,
    109.84	,
    109.78	,
    109.69	,
    109.60	,
    109.58	,
    110.00	,
    109.65	,
    109.49	,
    109.32	,
    109.78	,
    109.92	,
    109.91	,
    109.21	,
    109.53	,
    109.59	,
    109.61	,
    109.74	,
    109.61	,
    109.25	,
    109.86	,
    109.42	,
    109.25	,
    110.01	,
    109.75	,
    109.80	,
    109.65	,
    109.42	,
    109.96	,
    110.08	,
    109.95	,
    109.56	,
    109.86	,
    109.28	,
    109.43	,
    109.57	,
    109.25	,
    109.40	,
    109.66	,
    109.83	,
    109.80	,
    109.63	,
    109.80	,
    109.71	,
    109.75	,
    109.82	,
    109.96	,
    110.24	,
    109.70	,
    109.63	,
    109.78	,
    109.94	,
    109.88	,
    109.92	,
    109.94	,
    109.89	,
    109.53	,
    109.68	,
    109.78	,
    109.84	,
    109.83	,
    109.85	,
    109.95	,
    109.84	,
    109.84	,
    109.89	,
    109.20	,
    109.31	,
    109.86	,
    109.85	,
    110.04	,
    109.41	,
    110.08	,
    109.68	,
    109.52	,
    109.32	,
    109.14	,
    110.03	,
    110.00	,
    110.14	,
    109.98	,
    109.44	,
    109.70	,
    109.80	,
    109.86	,
    110.16	,
    110.26	,
    109.65	,
    110.02	,
    110.28	,
    109.61	,
    109.52	,
    109.87	,
    109.31	,
    109.72	,
    110.21	,
    109.62	,
    110.49	,
    109.67	,
    109.54	,
    109.61	,
    109.86	,
    110.34	,
    110.09	,
    109.80	,
    109.99	,
    109.98	,
    109.49	,
    110.32	,
    109.78	,
    110.13	,
    109.92	,
    110.02	,
    109.55	,
    109.93	,
    109.78	,
    109.57	,
    109.84	,
    109.80	,
    110.19	,
    110.01	,
    110.02	,
    109.81	,
    109.67	,
    109.77	,
    109.60	,
    109.98	,
    109.94	,
    109.94	,
    109.52	,
    109.79	,
    110.02	,
    109.76	,
    109.48	,
    109.42	,
    109.86	,
    109.77	,
    109.90	,
    109.82	,
    109.67	,
    109.84	,
    110.31	,
    110.21	,
    109.98	,
    109.68	,
    109.96	,
    109.85	,
    110.07	,
    109.79	,
    109.98	,
    109.96	,
    109.55	,
    109.57	,
    109.82	,
    109.72	,
    109.66	,
    109.55	,
    109.55	,
    109.98	,
    109.57	,
    109.86	,
    110.03	,
    110.20	,
    110.08	,
    109.90	,
    109.97	,
    109.85	,
    109.95	,
    109.90	,
    109.60	,
    109.60	,
    109.82	,
    109.37	,
    109.58	,
    109.80	,
    109.90	,
    109.45	,
    109.46	,
    109.82	,
    109.82	,
    109.74	,
    109.79	,
    109.54	,
    109.91	,
    109.90	,
    110.15	,
    110.16	,
    109.95	,
    109.46	,
    109.42	,
    110.28	,
    109.65	,
    110.14	,
    109.65	,
    109.76	,
    110.06	,
    109.77	,
    109.46	,
    109.80	,
    109.92	,
    109.48	,
    110.08	,
    109.90	,
    109.96	,
    109.81	,
    110.20	,
    110.12	,
    110.19	,
    109.78	,
    109.88	,
    110.04	,
    110.04	,
    109.40	,
    109.63	,
    109.27	,
    109.62	,
    109.98	,
    109.80	,
    109.86	,
    109.79	,
    109.23	,
    109.57	,
    109.96	,
    109.44	,
    109.66	,
    109.93	,
    109.56	,
    109.39	,
    110.09	,
    110.02	,
    109.74	,
    110.04	,
    109.65	,
    109.54	,
    109.70	,
    109.77	,
    110.20	,
    110.61	,
    110.21	,
    110.13	,
    109.84	,
    109.62	,
    109.55	,
    109.56	,
    109.67	,
    109.91	,
    109.85	,
    109.92	,
    109.71	,
    109.38	,
    109.42	,
    109.52	,
    109.60	,
    109.67	,
    109.96	,
    109.97	,
    109.94	,
    109.43	,
    109.65	,
    109.83	,
    110.12	,
    109.91	,
    109.82	,
    109.90	,
    109.72	,
    109.91	,
    109.88	,
    109.72	,
    110.03	,
    110.04	,
    109.79	,
    109.73	,
    109.92	,
    110.36	,
    110.20	,
    109.75
    ])


if __name__ == "__main__":
        
    wn = turtle.Screen() #cria a tela e chama de wn.screensize(700,700)
    cor_fundo=(1,1,1)
    wn.bgcolor(cor_fundo)
    # definindo cor do background
    wn.title("grafico merda") #titulo

    cane_front = turtle.Turtle()
    cane_front.speed(0) #velocidade desenho da linha dos limites 
    cane_front.color("purple") 
    cane_front.penup() #por default a caneta inicia no meio da tela, isso serve para desencostar a caneta da tela
    cane_front.setposition(-270,-270)
    cane_front.pendown()
    cane_front.pensize(3) #tamanho tela
    x1=-300
    y1=-270

    for size in range(2):
        cane_front.fd(600)
        cane_front.setposition(x1,y1)
        cane_front.lt(90)
    #cane_front.hideturtle
    cane_front.lt(180)

    tam=len(vetor)

    s=DAdosMotor.cria_vetor(0,600,600/tam)

    #print(vetor)


    tamanho_vetor=len(vetor)
    cane_front.pendown()
    cane_front.setposition(x1,y1)
    for i in range(tamanho_vetor):
        x=x1+s[i]
        y=y1+vetor[i]*3
        #cane_front.setposition(x1+S[size]*600, y1+x[size-len(x)]*.5 )
        cane_front.setposition(x, y )

    print("o tamanho dos dados eh:", len(vetor))
    print("o tamanho dos dados eh:", len(s))
    delay =input("press enter")
